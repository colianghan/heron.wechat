// Generated by CoffeeScript 1.7.1
(function() {
  var encrypt, parseJson, parseXml, wechat, xml2js;

  encrypt = require("./encrypt");

  xml2js = require("xml2js");

  parseJson = function(xml) {
    var msg;
    msg = {};
    xml2js.parseString(xml, function(err, result) {
      var data;
      data = result.xml;
      msg.ToUserName = data.ToUserName[0];
      msg.FromUserName = data.FromUserName[0];
      msg.CreateTime = data.CreateTime[0];
      msg.MsgType = data.MsgType[0];
      switch (msg.MsgType) {
        case "text":
          msg.Content = data.Content[0];
          return msg.MsgId = data.MsgId[0];
      }
    });
    return msg;
  };

  parseXml = function(data) {
    var MsgType, msg;
    MsgType = "";
    if (!data.MsgType) {
      if (data.hasOwnProperty("Content")) {
        MsgType = "text";
      }
      if (data.hasOwnProperty("MusicUrl")) {
        MsgType = "music";
      }
      if (data.hasOwnProperty("Articles")) {
        MsgType = "news";
      }
    } else {
      MsgType = data.MsgType;
    }
    msg = "<xml>\n<ToUserName><![CDATA[" + data.ToUserName + "]]></ToUserName>\n<FromUserName><![CDATA[" + data.FromUserName + "]]></FromUserName>\n<CreateTime>" + (Date.now() / 1000) + "\"</CreateTime>\n<MsgType><![CDATA[" + MsgType + "]]></MsgType>";
    switch (MsgType) {
      case "text":
        msg += "<Content><![CDATA[" + (data.Content || '') + "]]></Content>\n</xml>";
    }
    return msg;
  };

  wechat = (function() {
    function wechat(token) {
      this.token = token;
    }

    wechat.prototype.checkSignature = function(parms) {
      var strHash;
      strHash = encrypt.sha1Hash([this.token, parms.timestamp, parms.nonce].sort().join(""));
      if (strHash === parms.signature) {
        return true;
      } else {
        return false;
      }
    };

    wechat.prototype.getMsg = function(req, next) {
      var xml;
      xml = "";
      req.on("data", function(chunk) {
        return xml += chunk;
      });
      return req.on("end", function() {
        return next(parseJson(xml));
      });
    };

    wechat.prototype.parseMsg = function(data) {
      return parseXml(data);
    };

    return wechat;

  })();

  module.exports = function(token) {
    return new wechat(token);
  };

}).call(this);

//# sourceMappingURL=wechat.map
