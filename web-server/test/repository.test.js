// Generated by CoffeeScript 1.7.1
(function() {
  var async, chai, consts, expect, mongoose, repository_base, should, test_helper, user_schema;

  chai = require("chai");

  expect = chai.expect;

  should = chai.should();

  async = require("async");

  test_helper = require("./test_helper");

  mongoose = require("mongoose");

  repository_base = test_helper.require("repository/repository_base");

  user_schema = test_helper.require("schema/user_schema");

  consts = test_helper.require("consts/consts");

  describe("repository_base", function() {
    describe("#ctor", function() {
      return it("open databese", function(done) {
        var rep;
        rep = new repository_base(consts.MONGODB_CONFIG_PATH);
        rep.model = rep.connection.model("user", user_schema);
        return rep.connection.once("open", function(err) {
          rep.connection.readyState.should.to.equal(mongoose.STATES.connected);
          return done();
        });
      });
    });
    describe("#insert", function() {
      return it("insert 10 data", function(done) {
        var rep;
        rep = new repository_base(consts.MONGODB_CONFIG_PATH);
        rep.model = rep.connection.model("user", user_schema);
        return async.each([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(i, step) {
          var entity;
          entity = {};
          entity.username = "test" + i;
          entity.password = "test" + i;
          entity.age = i;
          return rep.save(entity, function(err) {
            return step();
          });
        }, function(err) {
          return done();
        });
      });
    });
    return describe("#findAll", function() {
      return it("findAll data", function(done) {
        var rep;
        rep = new repository_base(consts.MONGODB_CONFIG_PATH);
        rep.model = rep.connection.model("user", user_schema);
        return rep.findAll(function(err, data) {
          return done();
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=repository.test.map
