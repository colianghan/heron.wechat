// Generated by LiveScript 1.2.0
(function(){
  var http, _, xml2js, views, index;
  http = require('http');
  _ = require('lodash');
  xml2js = require('xml2js');
  views = require('../helpers/views');
  this.index = index = (function(){
    index.displayName = 'index';
    var prototype = index.prototype, constructor = index;
    index.get = function*(){
      var url, xml, data;
      url = 'http://kjm.beihangonline.com/G00001/courseware/';
      xml = yield function(done){
        return http.get('http://kjm.beihangonline.com/G00001/courseware/imsmanifest.xml', function(res){
          var data;
          data = '';
          res.setEncoding('utf8');
          res.on('data', function(chunk){
            return data += chunk;
          });
          return res.on('end', function(){
            return done(null, data);
          });
        });
      };
      data = yield function(done){
        return xml2js.parseString(xml, function(err, result){
          var organizations, resources, loopOrganizations, res;
          organizations = result.manifest.organizations[0].organization[0].item;
          resources = result.manifest.resources[0].resource;
          loopOrganizations = function(data$, array){
            var i$, len$, list, item, identifierref, resource;
            if (array && array.length > 0) {
              for (i$ = 0, len$ = array.length; i$ < len$; ++i$) {
                list = array[i$];
                item = {};
                item['title'] = list.title;
                item['identifier'] = list.$.identifier;
                identifierref = list.$.identifierref;
                if (identifierref) {
                  resource = _.find(resources, fn$);
                  if (resource) {
                    item['href'] = url + resource.$.href;
                  }
                }
                data$.push(item);
                item.item = [];
                if (list.item) {
                  loopOrganizations(item.item, list.item);
                }
              }
              return data$;
            }
            function fn$(item){
              return item.$.identifier === identifierref;
            }
          };
          res = loopOrganizations([], organizations);
          return done(null, res);
        });
      };
      this.body = yield views.hogan.render('topics/index', {
        data: data
      });
    };
    function index(){}
    return index;
  }());
}).call(this);
